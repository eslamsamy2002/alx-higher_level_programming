The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an matrix_divided test file
First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided 

matrix not list of list:
    >>> matrix_divided("[[1, 2.0, 3], [4, (5.0, 7), [1, 2, 3]]]", 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test empty matrix:
    >>> matrix_divided([[]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


elements not int or float matrix:
    >>> matrix_divided([[1, 2.0, "3"], [4, (5.0, 7), [1, 2, 3]]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

dimensions aren't same:
    >>> matrix_divided([[1, 2.0, 3], [1, 3], [1, 2, 3]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size


result int or float matrix:
    >>> matrix_divided([[1, 2.0, 3], [4, 5.0, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]


Test division by negative:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], -3)
    [[-0.67, -1.33, -2.67], [-0.33, -0.67, -1.0]]

Test division by inf:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

div isn't number:
    >>> matrix_divided([[1, 2.0, 3], [4, 5.0, 6]], "5")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

division by zero:
    >>> matrix_divided([[1, 2.0, 3], [4, 5.0, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
